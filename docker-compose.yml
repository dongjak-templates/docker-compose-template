version: '3.8'

services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: aq
      PGDATA: /data/postgres
    volumes:
      - ./db/data:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - aq
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis
    restart: always
    command: redis-server --requirepass 123394 --bind 0.0.0.0 -::*
    ports:
      - "6379:6379"
    networks:
      - aq
  gateway:
    image: caddy
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./gateway/Caddyfile:/etc/caddy/Caddyfile
      - ./gateway/.certificates:/data/caddy/certificates
    networks:
      - aq
  dockge:
    image: louislam/dockge:1
    restart: unless-stopped
    ports:
      - 5001:5001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data:/app/data
      # Stacks Directory
      # ⚠️ READ IT CAREFULLY. If you did it wrong, your data could end up writing into a WRONG PATH.
      # ⚠️ 1. FULL path only. No relative path (MUST)
      # ⚠️ 2. Left Stacks Path === Right Stacks Path (MUST)
      - /opt/stacks:/opt/stacks
    environment:
      # Tell Dockge where to find the stacks
      - DOCKGE_STACKS_DIR=/opt/stacks
networks:
  aq:
    driver: bridge